<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;

return new class extends Migration
{
    /*
    |--------------------------------------------------------------------------
    | 성능 최적화 인덱스 생성 (Performance Optimization Indexes)
    |--------------------------------------------------------------------------
    */

    /**
     * 성능 최적화를 위한 인덱스 생성
     */
    public function up(): void
    {
        // 사용자 테이블 인덱스
        $this->createUserIndexes();
        
        // 게시판 테이블 인덱스  
        $this->createBoardIndexes();
        
        // 쇼핑몰 테이블 인덱스
        $this->createShopIndexes();
        
        // 시스템 테이블 인덱스
        $this->createSystemIndexes();
        
        // 동적 게시판 인덱스
        $this->createDynamicBoardIndexes();
    }

    /**
     * 사용자 관련 테이블 인덱스 생성
     */
    private function createUserIndexes(): void
    {
        Schema::table('users', function (Blueprint $table) {
            // 로그인 및 인증 최적화
            $table->index(['email', 'status'], 'idx_users_email_status');
            $table->index(['last_login_at', 'status'], 'idx_users_last_login_status');
            
            // 사용자 레벨 및 포인트 기반 조회
            $table->index(['level', 'points'], 'idx_users_level_points');
            $table->index(['status', 'created_at'], 'idx_users_status_created');
            
            // 활동 추적
            $table->index(['created_at', 'status'], 'idx_users_created_status');
        });

        // 로그인 히스토리 테이블 인덱스
        if (Schema::hasTable('login_histories')) {
            Schema::table('login_histories', function (Blueprint $table) {
                $table->index(['authenticatable_type', 'authenticatable_id', 'created_at'], 'idx_login_histories_auth_date');
                $table->index(['ip_address', 'created_at'], 'idx_login_histories_ip_date');
                $table->index(['status', 'created_at'], 'idx_login_histories_status_date');
            });
        }

        // 사용자 활동 로그 테이블 인덱스
        if (Schema::hasTable('user_activity_logs')) {
            Schema::table('user_activity_logs', function (Blueprint $table) {
                $table->index(['user_id', 'activity_type', 'created_at'], 'idx_activity_user_type_date');
                $table->index(['related_type', 'related_id'], 'idx_activity_related');
                $table->index(['created_at', 'activity_type'], 'idx_activity_date_type');
            });
        }

        // 포인트 히스토리 테이블 인덱스
        if (Schema::hasTable('point_histories')) {
            Schema::table('point_histories', function (Blueprint $table) {
                $table->index(['user_id', 'created_at'], 'idx_point_histories_user_date');
                $table->index(['pointable_type', 'pointable_id'], 'idx_point_histories_pointable');
                $table->index(['type', 'points'], 'idx_point_histories_type_points');
            });
        }
    }

    /**
     * 게시판 관련 테이블 인덱스 생성
     */
    private function createBoardIndexes(): void
    {
        // 게시판 그룹 테이블
        if (Schema::hasTable('board_groups')) {
            Schema::table('board_groups', function (Blueprint $table) {
                $table->index(['is_active', 'sort_order'], 'idx_board_groups_active_sort');
            });
        }

        // 게시판 테이블
        if (Schema::hasTable('boards')) {
            Schema::table('boards', function (Blueprint $table) {
                $table->index(['board_group_id', 'is_active'], 'idx_boards_group_active');
                $table->index(['slug', 'is_active'], 'idx_boards_slug_active');
                $table->index(['is_active', 'sort_order'], 'idx_boards_active_sort');
                $table->index(['created_at', 'is_active'], 'idx_boards_created_active');
            });
        }

        // 게시판 관리자 테이블
        if (Schema::hasTable('board_managers')) {
            Schema::table('board_managers', function (Blueprint $table) {
                $table->index(['board_id', 'user_id'], 'idx_board_managers_board_user');
                $table->index(['user_id', 'created_at'], 'idx_board_managers_user_date');
            });
        }

        // 첨부파일 테이블
        if (Schema::hasTable('attachments')) {
            Schema::table('attachments', function (Blueprint $table) {
                $table->index(['attachable_type', 'attachable_id'], 'idx_attachments_attachable');
                $table->index(['original_name', 'file_type'], 'idx_attachments_name_type');
                $table->index(['created_at', 'file_size'], 'idx_attachments_date_size');
            });
        }

        // 좋아요 테이블
        if (Schema::hasTable('post_likes')) {
            Schema::table('post_likes', function (Blueprint $table) {
                $table->index(['likeable_type', 'likeable_id'], 'idx_post_likes_likeable');
                $table->index(['user_id', 'created_at'], 'idx_post_likes_user_date');
                $table->index(['user_id', 'likeable_type', 'likeable_id'], 'idx_post_likes_user_likeable');
            });
        }

        // 스크랩 테이블
        if (Schema::hasTable('scraps')) {
            Schema::table('scraps', function (Blueprint $table) {
                $table->index(['scrapable_type', 'scrapable_id'], 'idx_scraps_scrapable');
                $table->index(['user_id', 'created_at'], 'idx_scraps_user_date');
                $table->index(['user_id', 'scrapable_type'], 'idx_scraps_user_type');
            });
        }
    }

    /**
     * 쇼핑몰 관련 테이블 인덱스 생성
     */
    private function createShopIndexes(): void
    {
        // 상품 카테고리 테이블
        if (Schema::hasTable('shop_categories')) {
            Schema::table('shop_categories', function (Blueprint $table) {
                $table->index(['parent_id', 'sort_order'], 'idx_shop_categories_parent_sort');
                $table->index(['is_active', 'sort_order'], 'idx_shop_categories_active_sort');
                $table->index(['slug', 'is_active'], 'idx_shop_categories_slug_active');
            });
        }

        // 상품 테이블
        if (Schema::hasTable('shop_products')) {
            Schema::table('shop_products', function (Blueprint $table) {
                $table->index(['category_id', 'status'], 'idx_shop_products_category_status');
                $table->index(['status', 'is_featured'], 'idx_shop_products_status_featured');
                $table->index(['price', 'status'], 'idx_shop_products_price_status');
                $table->index(['stock_status', 'status'], 'idx_shop_products_stock_status');
                $table->index(['created_at', 'status'], 'idx_shop_products_created_status');
                $table->index(['sales_count', 'status'], 'idx_shop_products_sales_status');
                $table->index(['average_rating', 'reviews_count'], 'idx_shop_products_rating_reviews');
                
                // 상품명 및 설명 검색을 위한 FULLTEXT 인덱스
                if (DB::connection()->getDriverName() === 'mysql') {
                    DB::statement('ALTER TABLE shop_products ADD FULLTEXT(name, description)');
                }
            });
        }

        // 주문 테이블
        if (Schema::hasTable('shop_orders')) {
            Schema::table('shop_orders', function (Blueprint $table) {
                $table->index(['user_id', 'status'], 'idx_shop_orders_user_status');
                $table->index(['status', 'created_at'], 'idx_shop_orders_status_date');
                $table->index(['payment_status', 'shipping_status'], 'idx_shop_orders_payment_shipping');
                $table->index(['order_number', 'status'], 'idx_shop_orders_number_status');
                $table->index(['created_at', 'total_amount'], 'idx_shop_orders_date_amount');
            });
        }

        // 주문 상품 테이블
        if (Schema::hasTable('shop_order_items')) {
            Schema::table('shop_order_items', function (Blueprint $table) {
                $table->index(['order_id', 'product_id'], 'idx_shop_order_items_order_product');
                $table->index(['product_id', 'created_at'], 'idx_shop_order_items_product_date');
            });
        }

        // 상품 리뷰 테이블
        if (Schema::hasTable('shop_product_reviews')) {
            Schema::table('shop_product_reviews', function (Blueprint $table) {
                $table->index(['product_id', 'status'], 'idx_shop_reviews_product_status');
                $table->index(['user_id', 'created_at'], 'idx_shop_reviews_user_date');
                $table->index(['rating', 'status'], 'idx_shop_reviews_rating_status');
                $table->index(['status', 'created_at'], 'idx_shop_reviews_status_date');
                
                // 리뷰 내용 검색을 위한 FULLTEXT 인덱스
                if (DB::connection()->getDriverName() === 'mysql') {
                    DB::statement('ALTER TABLE shop_product_reviews ADD FULLTEXT(title, content)');
                }
            });
        }

        // 결제 내역 테이블
        if (Schema::hasTable('shop_payments')) {
            Schema::table('shop_payments', function (Blueprint $table) {
                $table->index(['order_id', 'status'], 'idx_shop_payments_order_status');
                $table->index(['payment_method', 'status'], 'idx_shop_payments_method_status');
                $table->index(['status', 'created_at'], 'idx_shop_payments_status_date');
                $table->index(['transaction_id', 'status'], 'idx_shop_payments_transaction_status');
            });
        }
    }

    /**
     * 시스템 관련 테이블 인덱스 생성
     */
    private function createSystemIndexes(): void
    {
        // 관리자 테이블
        if (Schema::hasTable('admins')) {
            Schema::table('admins', function (Blueprint $table) {
                $table->index(['email', 'status'], 'idx_admins_email_status');
                $table->index(['role', 'status'], 'idx_admins_role_status');
                $table->index(['last_login_at', 'status'], 'idx_admins_last_login_status');
            });
        }

        // 시스템 설정 테이블
        if (Schema::hasTable('system_settings')) {
            Schema::table('system_settings', function (Blueprint $table) {
                $table->index(['key', 'is_active'], 'idx_system_settings_key_active');
                $table->index(['group', 'is_active'], 'idx_system_settings_group_active');
            });
        }

        // 활동 제한 정책 테이블
        if (Schema::hasTable('posting_limits')) {
            Schema::table('posting_limits', function (Blueprint $table) {
                $table->index(['user_level', 'is_active'], 'idx_posting_limits_level_active');
                $table->index(['board_id', 'is_active'], 'idx_posting_limits_board_active');
                $table->index(['is_active', 'priority'], 'idx_posting_limits_active_priority');
            });
        }

        // 일일 활동 카운트 테이블
        if (Schema::hasTable('daily_activity_counts')) {
            Schema::table('daily_activity_counts', function (Blueprint $table) {
                $table->index(['user_id', 'date'], 'idx_daily_activity_user_date');
                $table->index(['date', 'activity_type'], 'idx_daily_activity_date_type');
                $table->index(['user_id', 'activity_type', 'date'], 'idx_daily_activity_user_type_date');
            });
        }

        // 실패한 작업 테이블 (Laravel 기본)
        if (Schema::hasTable('failed_jobs')) {
            Schema::table('failed_jobs', function (Blueprint $table) {
                $table->index(['queue', 'failed_at'], 'idx_failed_jobs_queue_failed');
                $table->index(['failed_at'], 'idx_failed_jobs_failed_at');
            });
        }

        // 작업 테이블 (Laravel 기본)
        if (Schema::hasTable('jobs')) {
            Schema::table('jobs', function (Blueprint $table) {
                $table->index(['queue', 'reserved_at'], 'idx_jobs_queue_reserved');
                $table->index(['available_at'], 'idx_jobs_available_at');
            });
        }
    }

    /**
     * 동적 게시판 테이블 인덱스 생성
     */
    private function createDynamicBoardIndexes(): void
    {
        // 활성 게시판 목록 조회
        $boards = DB::table('boards')
            ->where('is_active', true)
            ->select('slug')
            ->get();

        foreach ($boards as $board) {
            $this->createBoardTableIndexes($board->slug);
        }
    }

    /**
     * 개별 게시판 테이블 인덱스 생성
     */
    private function createBoardTableIndexes(string $boardSlug): void
    {
        $postTableName = "board_{$boardSlug}";
        $commentTableName = "board_{$boardSlug}_comments";

        // 게시글 테이블 인덱스
        if (Schema::hasTable($postTableName)) {
            Schema::table($postTableName, function (Blueprint $table) {
                $table->index(['status', 'is_notice'], 'idx_posts_status_notice');
                $table->index(['status', 'is_featured'], 'idx_posts_status_featured');
                $table->index(['user_id', 'status'], 'idx_posts_user_status');
                $table->index(['created_at', 'status'], 'idx_posts_created_status');
                $table->index(['view_count', 'status'], 'idx_posts_view_status');
                $table->index(['like_count', 'status'], 'idx_posts_like_status');
                $table->index(['comment_count', 'status'], 'idx_posts_comment_status');
                $table->index(['status', 'created_at', 'is_notice'], 'idx_posts_status_created_notice');
                
                // 복합 성능 인덱스 (인기 게시글 조회용)
                $table->index(['status', 'view_count', 'like_count', 'comment_count'], 'idx_posts_popularity');
            });

            // 게시글 제목/내용 검색을 위한 FULLTEXT 인덱스
            if (DB::connection()->getDriverName() === 'mysql') {
                DB::statement("ALTER TABLE {$postTableName} ADD FULLTEXT(title, content)");
            }
        }

        // 댓글 테이블 인덱스
        if (Schema::hasTable($commentTableName)) {
            Schema::table($commentTableName, function (Blueprint $table) {
                $table->index(['post_id', 'status'], 'idx_comments_post_status');
                $table->index(['user_id', 'status'], 'idx_comments_user_status');
                $table->index(['parent_id', 'created_at'], 'idx_comments_parent_created');
                $table->index(['status', 'created_at'], 'idx_comments_status_created');
                $table->index(['post_id', 'parent_id', 'created_at'], 'idx_comments_post_parent_created');
            });

            // 댓글 내용 검색을 위한 FULLTEXT 인덱스
            if (DB::connection()->getDriverName() === 'mysql') {
                DB::statement("ALTER TABLE {$commentTableName} ADD FULLTEXT(content)");
            }
        }
    }

    /**
     * 인덱스 삭제 (마이그레이션 롤백 시)
     */
    public function down(): void
    {
        // 사용자 관련 인덱스 삭제
        $this->dropUserIndexes();
        
        // 게시판 관련 인덱스 삭제
        $this->dropBoardIndexes();
        
        // 쇼핑몰 관련 인덱스 삭제
        $this->dropShopIndexes();
        
        // 시스템 관련 인덱스 삭제
        $this->dropSystemIndexes();
        
        // 동적 게시판 인덱스 삭제
        $this->dropDynamicBoardIndexes();
    }

    /**
     * 사용자 관련 인덱스 삭제
     */
    private function dropUserIndexes(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropIndex('idx_users_email_status');
            $table->dropIndex('idx_users_last_login_status');
            $table->dropIndex('idx_users_level_points');
            $table->dropIndex('idx_users_status_created');
            $table->dropIndex('idx_users_created_status');
        });

        if (Schema::hasTable('login_histories')) {
            Schema::table('login_histories', function (Blueprint $table) {
                $table->dropIndex('idx_login_histories_auth_date');
                $table->dropIndex('idx_login_histories_ip_date');
                $table->dropIndex('idx_login_histories_status_date');
            });
        }

        if (Schema::hasTable('user_activity_logs')) {
            Schema::table('user_activity_logs', function (Blueprint $table) {
                $table->dropIndex('idx_activity_user_type_date');
                $table->dropIndex('idx_activity_related');
                $table->dropIndex('idx_activity_date_type');
            });
        }

        if (Schema::hasTable('point_histories')) {
            Schema::table('point_histories', function (Blueprint $table) {
                $table->dropIndex('idx_point_histories_user_date');
                $table->dropIndex('idx_point_histories_pointable');
                $table->dropIndex('idx_point_histories_type_points');
            });
        }
    }

    /**
     * 게시판 관련 인덱스 삭제
     */
    private function dropBoardIndexes(): void
    {
        if (Schema::hasTable('board_groups')) {
            Schema::table('board_groups', function (Blueprint $table) {
                $table->dropIndex('idx_board_groups_active_sort');
            });
        }

        if (Schema::hasTable('boards')) {
            Schema::table('boards', function (Blueprint $table) {
                $table->dropIndex('idx_boards_group_active');
                $table->dropIndex('idx_boards_slug_active');
                $table->dropIndex('idx_boards_active_sort');
                $table->dropIndex('idx_boards_created_active');
            });
        }

        if (Schema::hasTable('board_managers')) {
            Schema::table('board_managers', function (Blueprint $table) {
                $table->dropIndex('idx_board_managers_board_user');
                $table->dropIndex('idx_board_managers_user_date');
            });
        }

        if (Schema::hasTable('attachments')) {
            Schema::table('attachments', function (Blueprint $table) {
                $table->dropIndex('idx_attachments_attachable');
                $table->dropIndex('idx_attachments_name_type');
                $table->dropIndex('idx_attachments_date_size');
            });
        }

        if (Schema::hasTable('post_likes')) {
            Schema::table('post_likes', function (Blueprint $table) {
                $table->dropIndex('idx_post_likes_likeable');
                $table->dropIndex('idx_post_likes_user_date');
                $table->dropIndex('idx_post_likes_user_likeable');
            });
        }

        if (Schema::hasTable('scraps')) {
            Schema::table('scraps', function (Blueprint $table) {
                $table->dropIndex('idx_scraps_scrapable');
                $table->dropIndex('idx_scraps_user_date');
                $table->dropIndex('idx_scraps_user_type');
            });
        }
    }

    /**
     * 쇼핑몰 관련 인덱스 삭제
     */
    private function dropShopIndexes(): void
    {
        if (Schema::hasTable('shop_categories')) {
            Schema::table('shop_categories', function (Blueprint $table) {
                $table->dropIndex('idx_shop_categories_parent_sort');
                $table->dropIndex('idx_shop_categories_active_sort');
                $table->dropIndex('idx_shop_categories_slug_active');
            });
        }

        if (Schema::hasTable('shop_products')) {
            Schema::table('shop_products', function (Blueprint $table) {
                $table->dropIndex('idx_shop_products_category_status');
                $table->dropIndex('idx_shop_products_status_featured');
                $table->dropIndex('idx_shop_products_price_status');
                $table->dropIndex('idx_shop_products_stock_status');
                $table->dropIndex('idx_shop_products_created_status');
                $table->dropIndex('idx_shop_products_sales_status');
                $table->dropIndex('idx_shop_products_rating_reviews');
            });

            // FULLTEXT 인덱스 삭제
            if (DB::connection()->getDriverName() === 'mysql') {
                DB::statement('ALTER TABLE shop_products DROP INDEX name');
            }
        }

        if (Schema::hasTable('shop_orders')) {
            Schema::table('shop_orders', function (Blueprint $table) {
                $table->dropIndex('idx_shop_orders_user_status');
                $table->dropIndex('idx_shop_orders_status_date');
                $table->dropIndex('idx_shop_orders_payment_shipping');
                $table->dropIndex('idx_shop_orders_number_status');
                $table->dropIndex('idx_shop_orders_date_amount');
            });
        }

        if (Schema::hasTable('shop_order_items')) {
            Schema::table('shop_order_items', function (Blueprint $table) {
                $table->dropIndex('idx_shop_order_items_order_product');
                $table->dropIndex('idx_shop_order_items_product_date');
            });
        }

        if (Schema::hasTable('shop_product_reviews')) {
            Schema::table('shop_product_reviews', function (Blueprint $table) {
                $table->dropIndex('idx_shop_reviews_product_status');
                $table->dropIndex('idx_shop_reviews_user_date');
                $table->dropIndex('idx_shop_reviews_rating_status');
                $table->dropIndex('idx_shop_reviews_status_date');
            });

            // FULLTEXT 인덱스 삭제
            if (DB::connection()->getDriverName() === 'mysql') {
                DB::statement('ALTER TABLE shop_product_reviews DROP INDEX title');
            }
        }

        if (Schema::hasTable('shop_payments')) {
            Schema::table('shop_payments', function (Blueprint $table) {
                $table->dropIndex('idx_shop_payments_order_status');
                $table->dropIndex('idx_shop_payments_method_status');
                $table->dropIndex('idx_shop_payments_status_date');
                $table->dropIndex('idx_shop_payments_transaction_status');
            });
        }
    }

    /**
     * 시스템 관련 인덱스 삭제
     */
    private function dropSystemIndexes(): void
    {
        if (Schema::hasTable('admins')) {
            Schema::table('admins', function (Blueprint $table) {
                $table->dropIndex('idx_admins_email_status');
                $table->dropIndex('idx_admins_role_status');
                $table->dropIndex('idx_admins_last_login_status');
            });
        }

        if (Schema::hasTable('system_settings')) {
            Schema::table('system_settings', function (Blueprint $table) {
                $table->dropIndex('idx_system_settings_key_active');
                $table->dropIndex('idx_system_settings_group_active');
            });
        }

        if (Schema::hasTable('posting_limits')) {
            Schema::table('posting_limits', function (Blueprint $table) {
                $table->dropIndex('idx_posting_limits_level_active');
                $table->dropIndex('idx_posting_limits_board_active');
                $table->dropIndex('idx_posting_limits_active_priority');
            });
        }

        if (Schema::hasTable('daily_activity_counts')) {
            Schema::table('daily_activity_counts', function (Blueprint $table) {
                $table->dropIndex('idx_daily_activity_user_date');
                $table->dropIndex('idx_daily_activity_date_type');
                $table->dropIndex('idx_daily_activity_user_type_date');
            });
        }

        if (Schema::hasTable('failed_jobs')) {
            Schema::table('failed_jobs', function (Blueprint $table) {
                $table->dropIndex('idx_failed_jobs_queue_failed');
                $table->dropIndex('idx_failed_jobs_failed_at');
            });
        }

        if (Schema::hasTable('jobs')) {
            Schema::table('jobs', function (Blueprint $table) {
                $table->dropIndex('idx_jobs_queue_reserved');
                $table->dropIndex('idx_jobs_available_at');
            });
        }
    }

    /**
     * 동적 게시판 인덱스 삭제
     */
    private function dropDynamicBoardIndexes(): void
    {
        $boards = DB::table('boards')
            ->where('is_active', true)
            ->select('slug')
            ->get();

        foreach ($boards as $board) {
            $this->dropBoardTableIndexes($board->slug);
        }
    }

    /**
     * 개별 게시판 테이블 인덱스 삭제
     */
    private function dropBoardTableIndexes(string $boardSlug): void
    {
        $postTableName = "board_{$boardSlug}";
        $commentTableName = "board_{$boardSlug}_comments";

        if (Schema::hasTable($postTableName)) {
            Schema::table($postTableName, function (Blueprint $table) {
                $table->dropIndex('idx_posts_status_notice');
                $table->dropIndex('idx_posts_status_featured');
                $table->dropIndex('idx_posts_user_status');
                $table->dropIndex('idx_posts_created_status');
                $table->dropIndex('idx_posts_view_status');
                $table->dropIndex('idx_posts_like_status');
                $table->dropIndex('idx_posts_comment_status');
                $table->dropIndex('idx_posts_status_created_notice');
                $table->dropIndex('idx_posts_popularity');
            });

            // FULLTEXT 인덱스 삭제
            if (DB::connection()->getDriverName() === 'mysql') {
                try {
                    DB::statement("ALTER TABLE {$postTableName} DROP INDEX title");
                } catch (\Exception $e) {
                    // 인덱스가 없을 경우 무시
                }
            }
        }

        if (Schema::hasTable($commentTableName)) {
            Schema::table($commentTableName, function (Blueprint $table) {
                $table->dropIndex('idx_comments_post_status');
                $table->dropIndex('idx_comments_user_status');
                $table->dropIndex('idx_comments_parent_created');
                $table->dropIndex('idx_comments_status_created');
                $table->dropIndex('idx_comments_post_parent_created');
            });

            // FULLTEXT 인덱스 삭제
            if (DB::connection()->getDriverName() === 'mysql') {
                try {
                    DB::statement("ALTER TABLE {$commentTableName} DROP INDEX content");
                } catch (\Exception $e) {
                    // 인덱스가 없을 경우 무시
                }
            }
        }
    }
};